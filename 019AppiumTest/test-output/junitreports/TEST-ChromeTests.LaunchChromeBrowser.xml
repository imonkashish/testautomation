import.org.selenium.in

<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="SweetHome" name="ChromeTests.LaunchChromeBrowser" tests="1" failures="0" timestamp="10 Dec 2016 19:12:36 GMT" time="0.000" errors="1">
  <testcase name="main" time="0.000" classname="ChromeTests.LaunchChromeBrowser">
    <error type="org.testng.TestNGException" message="
Method main requires 1 parameters but 0 were supplied in the @Test annotation.">
      <![CDATA[org.testng.TestNGException: 
Method main requires 1 parameters but 0 were supplied in the @Test annotation.
	at org.testng.internal.Parameters.checkParameterTypes(Parameters.java:191)
	at org.testng.internal.Parameters.createParameters(Parameters.java:127)
	at org.testng.internal.Parameters.createParameters(Parameters.java:376)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:451)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1270)
	at org.testng.internal.Invoker.createParameters(Invoker.java:985)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1075)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:112)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:205)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:176)
]]>
    
  </testcase> <!-- main -->
</testsuite> <!-- ChromeTests.LaunchChromeBrowser -->
at org.testng.remote.RemoteTestNG.(Remote.orgTestng>java:189);
at org.tetng.remote.assets.(test.org)
Assert.assertTrue(driver.getTitle().equals("Googlee"), "Title is incorrect");
	WebDriver driver = new FirefoxDriver();
driver.get("http://www.google.com"); //UserInteraction
	
WebDriver driver = new FirefoxDriver();
driver.manage().window().maximize(); //Max Browser
	
WebDriver driver = new FirefoxDriver();
driver.findElement(By.id("submit")).click();//Click On A Element
	
WebDriver driver = new FirefoxDriver();
driver.findElement(By.id("user_id")).clear();//Clear A Textbox
	
WebDriver driver = new FirefoxDriver();
WebElement radioEle = driver.findElement(By.id("male"));
radioEle.click();//Select a Radio Button Using Webdriver 
	
	

WebDriver driver = new FirefoxDriver();
WebElement radioEle = driver.findElement(By.id("male"))//Radio Button Is Selected
	
	

WebDriver driver = new FirefoxDriver();
String pageTitle = driver.getTitle(); // Capture the title of the Page 
	
	

WebDriver driver = new FirefoxDriver();
String pageSource = driver.getPageSource(); //Page Source Using WebDriver
	
	Multiple elements having same attribute value on page can be located by using findElements() method and can be stored in a list, find below the sample code for the same:

import java.util.List;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;
public class FindMultipleElements 
{
	WebDriver driver;
	@BeforeTest
public void launchURL()
{
		driver = new FirefoxDriver();
		driver.get("http:\www.google.com");
	}
	@Test
public void findAllElements()
{
		List appsList = driver.findElements(By.xpath(".//*[@class='gb_o']"));
		for(int i=0;
		i		i++)
{
			System.out.println(appsList.get(i).getText());
		}
	}
	@AfterTest
public void tearDown()
{
		driver.quit();
	}
}
	driver.findElement(By.name("Test Automation"));
	driver.element.sendKeys("Hello World!!");




	
	






	
	
	








